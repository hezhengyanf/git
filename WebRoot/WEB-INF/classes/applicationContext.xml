<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.2.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
                        http://www.springframework.org/schema/aop
 						http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

    
    
 
	<!-- 连接数据库 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
     <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
     <property name="url">
      <value><![CDATA[jdbc:mysql://localhost:3306/user?useUnicode=true&characterEncoding=utf-8]]></value>
     </property>
     <property name="username" value="root"></property>
     <property name="password" value="root"></property>
    </bean>
   <!-- 配置SqlSeesionFavtoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
     <property name="dataSource" ref="dataSource"></property>
  
     <property name="configLocation" value="classpath:mybatis-config.xml"></property>
     <property name="mapperLocations">
      <list>
       <value>classpath:dao/*.xml</value>
      </list>
     </property>
    </bean>
    
   
  
 
			
		<!-- 把sqlsessionTemplate注入到UserMapper中去。UserMapper才能对数据进行操作 -->
 
	 
	
	
	 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
     <property name="basePackage" value="dao"></property>    
   </bean> 
   <context:component-scan base-package="service"/>
 
 
 <!-- 事务管理器-->
 
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource"/>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/> 
	<!-- 
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	<tx:attributes>
	<tx:method name="*" propagation="REQUIRED"/>
	</tx:attributes>
	</tx:advice>
	
	<aop:config>
	<aop:pointcut id="serviceMethod" expression="execution(* service.BuService..*.*(..))" />
	<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod"/>
	</aop:config>
	-->
	
	
	 <bean id="theLogger1" class="aop.Huan"></bean> 
 <!-- 异常抛出增强 -->
 <aop:config>
        <!-- 定义切入点 -->
        <aop:pointcut id="pointcut1"
            expression="execution(* service.BuService.Cha1(..))" />
        <!-- 引用包含增强方法的Bean -->
        <aop:aspect ref="theLogger1">
            <!-- 将before()方法定义为前置增强并引用pointcut切入点 -->          
            <aop:around method="afterReturning"
                pointcut-ref="pointcut1"/>
        </aop:aspect>
    </aop:config>
  
    <bean id="theLogger2" class="aop.Zeng"></bean>
    <aop:config>     
        <aop:pointcut id="pointcut2"
            expression="execution(* service.BuService.Cha1(..))" />       
        <aop:aspect ref="theLogger2"> 
            <aop:after-throwing method="afterReturning"
                pointcut-ref="pointcut2" throwing="e" />
        </aop:aspect>
    </aop:config>
	
 
</beans>